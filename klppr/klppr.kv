#:kivy 1.0
#

<GpsScreen>:
    orientation: 'vertical'

    # TODO: change color momentarily when value changes
    accuracy_label: accuracy_label
    location_label: location_label

    BoxLayout:
        GridLayout:
            cols: 2
            rows: 4
            Label:
                id: location_label
                text: root.current_location
            Label:
                id: accuracy_label
                text: root.current_accuracy
            Label:
                text: root.camera_location
            Button:
                text: 'Camera location'
                on_press: root.on_camera_button()
            Label:
                text: root.subject_location
            Button:
                text: 'Subject location'
                on_press: root.on_subject_button()
            Label:
                text: ''
            Button:
                text: 'Next'
                on_press:
                    root.manager.transition.direction = 'left'
                    root.manager.current = 'calib'


<CameraScreen>:
    image: image
    status_label: status_label

    BoxLayout:
        orientation: 'vertical'

        RelativeLayout:
            size_hint: 1,.4

            canvas.before:
                Color:
                    rgb: 0, 0, 0
                Rectangle:
                    # self here refers to the widget i.e RelativeLayout
                    pos: self.pos
                    size: self.size
            Image:
                id: image
                size: (0,0) # to avoid white square at startup
            Label:
                id: status_label
                text: 'Waiting for camera...'

        GridLayout:
            size_hint: 1,.4
            cols: 5
            rows: 3

            # first row
            Label:
            Button:
                text: 'up'
                on_press: root.connector.send('/up')
            Label:
            Label:
            Button:
                text: 'zoom in'
                on_press: root.connector.send('/zoom_in')

            # second row
            Button:
                text: 'left'
                on_press: root.connector.send('/left')
            Label:
            Button:
                text: 'right'
                on_press: root.connector.send('/right')
            Label:
            Label:

            # third row
            Label:
            Button:
                text: 'down'
                on_press: root.connector.send('/down')
            Label:
            Label:
            Button:
                text: 'zoom out'
                on_press: root.connector.send('/zoom_out')

        GridLayout:
            size_hint: 1,.2
            cols: 2
            rows: 1

            Button:
                text: 'Back'
                on_press:
                    root.manager.transition.direction = 'right'
                    root.manager.current = 'gps'

            Button:
                text: 'Next'
                on_press:
                    root.manager.transition.direction = 'left'
                    root.manager.current = 'record'

<RecordScreen>:
    orientation: 'vertical'

    BoxLayout:
        GridLayout:
            cols: 2
            rows: 4
            Label:
                size_hint: .5,.2
                text: root.gps_accuracy                
            Label:
                size_hint: .5,.2
                text: root.network_latency
            Label:
                size_hint: .5,.2
                text: 'Recording:'
            Label:
                size_hint: .5,.2
                text: root.recording_time
            Button:
                size_hint: .5,.2
                text: 'Start'
                on_press: root.on_start()
            Button:
                size_hint: .5,.4
                text: 'Stop'
                on_press: root.on_stop()
            Button:
                size_hint: .5,.4
                text: 'Previous'
                on_press:
                    root.manager.transition.direction = 'right'
                    root.manager.current = 'calib'
            Label:
                size_hint: .5,.2
                text: ''